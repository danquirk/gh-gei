using System.Collections.Generic;using System.Linq;using System.Threading.Tasks;using FluentAssertions;using Moq;using Newtonsoft.Json.Linq;using OctoshiftCLI.Models;using OctoshiftCLI.Services;using Xunit;namespace OctoshiftCLI.Tests;public class GithubApiUpdateRulesetTests{[Fact]public async Task UpdateRepoRuleset_Sends_Expected_Payload(){string capturedUrl=null;object capturedPayload=null;var client=new Mock<GithubClient>(null,null,null,null,null,"pat");client.Setup(c=>c.PatchAsync(It.IsAny<string>(),It.IsAny<object>(),It.IsAny<Dictionary<string,string>>())).Callback<string,object,Dictionary<string,string>>((u,p,_)=>{capturedUrl=u;capturedPayload=p;}).ReturnsAsync("{}");var api=new GithubApi(client.Object,"https://api.github.com",null,null);var def=new GithubRulesetDefinition{Name="ado-default-branch-policies",TargetPatterns=new[]{"main"},RequiredApprovingReviewCount=3,RequiredStatusChecks=new[]{"build"}};await api.UpdateRepoRuleset("org","repo",123,def);capturedUrl.Should().Contain("/repos/org/repo/rulesets/123");var json=JObject.FromObject(capturedPayload);((string)json["name"]).Should().Be(def.Name);((JArray)json["rules"]).Count.Should().Be(2);}}