using System.Collections.Generic;
using System.Linq;
using OctoshiftCLI.Models;
namespace OctoshiftCLI.Services; public class DefaultBranchPolicyExtractionService { public GithubRulesetDefinition BuildRuleset(string defaultBranch, string rulesetName, IEnumerable<AdoPolicyConfiguration> policies) { var enabled = policies.Where(p => p.Enabled).ToList(); var reviewers = enabled.Where(p => p.Type == AdoPolicyType.MinimumReviewers).Select(p => p.MinimumApproverCount).Where(c => c.HasValue).DefaultIfEmpty().Max(); var status = enabled.Where(p => p.Type == AdoPolicyType.BuildValidation).Select(p => p.StatusCheckContext).Where(s => !string.IsNullOrWhiteSpace(s)).Distinct().Take(50).ToArray(); var bodyPatterns = enabled.Where(p => p.Type is AdoPolicyType.WorkItemLinking or AdoPolicyType.CommentResolution).SelectMany(p => p.RegexTemplates ?? System.Array.Empty<string>()).Where(x => !string.IsNullOrWhiteSpace(x)).Distinct().ToArray(); return new GithubRulesetDefinition { Name = rulesetName, TargetPatterns = new[] { defaultBranch }, RequiredApprovingReviewCount = reviewers, RequiredStatusChecks = status, RequiredPullRequestBodyPatterns = bodyPatterns }; } }
